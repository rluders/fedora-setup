# Fedora version (auto-detected; adjust if needed)
fedora_major: "{{ ansible_distribution_major_version | default('41') }}"

# Repos/features
enable_rpmfusion: true
enable_flathub: true

# Apps via RPM/DNF
rpm_packages:
  # basic
  - git
  - zsh
  - curl
  - wget
  - unzip
  - tar
  - solaar
  - gh
  - code # VS Code (Microsoft repo configured in 01_repos.yml)
  - google-chrome-stable # (Google repo in 01_repos.yml)

  # Dev tools
  - kubectl
  - helm
  - awscli2
  #- terraform
  #- minikube
  - jq
  - yq
  - htop
  - btop
  - nmap
  - nmap-ncat
  - gcc
  - make
  - cmake
  - python3-devel

  # Fonts & customization
  - fira-code-fonts
  - jetbrains-mono-fonts
  - papirus-icon-theme
  - gnome-tweaks
  - gnome-extensions-app

# Flatpaks (Flathub IDs)
flatpaks:
  - com.spotify.Client
  - com.discordapp.Discord
  - org.telegram.desktop
  - com.valvesoftware.Steam
  - io.podman_desktop.PodmanDesktop
  - com.jetbrains.Toolbox
  - io.dbeaver.DBeaverCommunity
  - com.brave.Browser

# Oh My Zsh plugins
zsh_plugins:
  - git
  - kubectl
  - aws

  # Navigation & listing
  - "alias ..='cd ..'"
  - "alias ...='cd ../.."
  - "alias ....='cd ../../.."
  - 'alias ls="ls --color=auto -hF"'
  - "alias ll='ls -alF'"
  - "alias la='ls -A'"
  - "alias lt='ls -altr'"

  # Quality of life
  - "alias grep='grep --color=auto'"
  - "alias dfh='df -hT'"
  - "alias duh='du -sh * | sort -h'"
  - "alias mem='free -h'"
  - "alias reload='exec zsh -l'"
  - "alias o='xdg-open'"
  - "alias serve='python3 -m http.server 8000'"

  # Git (in addition to the OMZ git plugin)
  - "alias g='git'"
  - "alias gs='git status -sb'"
  - "alias ga='git add -A'"
  - "alias gc='git commit -m'"
  - "alias gca='git commit -a -m'"
  - "alias gco='git checkout'"
  - "alias gcb='git checkout -b'"
  - "alias gl='git pull --rebase'"
  - "alias gp='git push'"
  - "alias gpf='git push --force-with-lease'"
  - "alias gd='git diff'"
  - "alias gds='git diff --staged'"
  - "alias gb='git branch -vv'"
  - "alias glo='git log --oneline --graph --decorate -n 30'"
  - "alias grbc='git rebase --continue'"
  - "alias grba='git rebase --abort'"
  - "alias grbi='git rebase -i'"
  - "alias gundo='git reset --soft HEAD~1'"
  - "alias grhh='git reset --hard HEAD'"
  - "alias gclean=\"git remote prune origin; git branch --merged | egrep -v '\\*|main|master|develop' | xargs -r git branch -d\""

  # GitHub CLI
  - "alias ghpr='gh pr create -w'"
  - "alias ghco='gh pr checkout'"

  # Kubernetes (k already exists below in functions with completion)
  - "alias kgp='kubectl get pods'"
  - "alias kgd='kubectl get deploy'"
  - "alias kgs='kubectl get svc'"
  - "alias kgn='kubectl get nodes'"
  - "alias kga='kubectl get all --all-namespaces'"
  - "alias kd='kubectl describe'"
  - "alias kl='kubectl logs'"
  - "alias kne='kubectl get ns'"
  - "alias ksec='kubectl get secrets'"
  - "alias kcm='kubectl get configmaps'"

  # Helm
  - "alias h='helm'"
  - "alias hl='helm list --all-namespaces'"
  - "alias hs='helm search repo'"

  # AWS
  - "alias awswho='aws sts get-caller-identity'"

  # DNF
  - "alias dnfs='sudo dnf search'"
  - "alias dnfi='sudo dnf -y install'"
  - "alias dnfr='sudo dnf -y remove'"
  - "alias dnfu='sudo dnf -y upgrade --refresh'"
  - "alias dnfl='dnf list --installed'"

  # Flatpak
  - "alias fpl='flatpak list'"
  - "alias fpi='flatpak install flathub'"
  - "alias fpr='flatpak remove'"
  - "alias fpu='flatpak update'"

  # Systemd & logs
  - "alias sc='sudo systemctl'"
  - "alias sj='sudo journalctl -xe'"
  - "alias scu='systemctl --user'"
  - "alias sju='journalctl --user -xe'"

  # Network
  - "alias ports='sudo ss -tulpn'"
  - "alias pingg='ping -c 5 8.8.8.8'"
  - "alias digg='dig +short'"

# --- ZSH FUNCTIONS: things aliases don't cover well ---
zsh_extra_functions: |
  # mkcd: create directory and enter it
  mkcd() { mkdir -p "$1" && cd "$1"; }

  # extract: extract file based on extension
  extract() {
    if [ -f "$1" ]; then
      case "$1" in
        *.tar.bz2)   tar xjf "$1"   ||
        *.tar.gz)    tar xzf "$1"   ||
        *.tar.xz)    tar xJf "$1"   ||
        *.tar.zst)   tar --zstd -xf "$1" ||
        *.tbz2)      tar xjf "$1"   ||
        *.tgz)       tar xzf "$1"   ||
        *.zip)       unzip "$1"     ||
        *.rar)       unrar x "$1"   ||
        *.7z)        7z x "$1"      ||
        *.tar)       tar xf "$1"    ||
        *)           echo "I don't know how to extract '$1'" ; return 1 ;;
      esac
    else
      echo "'$1' is not a valid file"
      return 1
    fi
  }

  # please: repeat the last command with sudo
  please() { sudo $(fc -ln -1); }

  # cdf: go to the root of the current git repository
  cdf() {
    local root
    root=$(git rev-parse --show-toplevel 2>/dev/null) || { echo "Not a git repo"; return 1; }
    cd "$root"
  }

  # psg: search for a process by name (case-insensitive)
  psg() { ps aux | grep -i --color=always "$@" | grep -v grep; }

  # ips: list local IPs quickly
  ips() { ip -o -4 addr show | awk '{print $2": "$4}' | cut -d/ -f1; }

  # k: shortcut for kubectl with completion
  alias k='kubectl'
  # Interactive execution in a pod
  kx() { kubectl exec -it "$@"; }
  # set current namespace
  kns() { kubectl config set-context --current --namespace "$1"; }
  # switch context
  kctx() { kubectl config use-context "$1"; }

zsh_extra_aliases:
  - "alias pdesk='flatpak run io.podman_desktop.PodmanDesktop'"
  - "alias dbeaver='flatpak run io.dbeaver.DBeaverCommunity'"
  - "alias brave='flatpak run com.brave.Browser'"

# --- ZSH OPTIONALS (.zshrc extra): better history, autocd, etc. ---
zsh_custom_rc_block: |
  # History and quality of life
  HISTSIZE=100000
  SAVEHIST=100000
  setopt INC_APPEND_HISTORY SHARE_HISTORY
  setopt HIST_IGNORE_DUPS HIST_IGNORE_ALL_DUPS HIST_VERIFY
  setopt EXTENDED_GLOB
  setopt AUTO_CD
  setopt NO_BEEP

  # Default editor (good for git)
  export EDITOR="code -w"
  export VISUAL="$EDITOR"

# Completions
zsh_enable_kubectl_completion: true
zsh_enable_helm_completion: true

# ZSH theme
zsh_theme: "spaceship"

# Target user
target_user: "{{ lookup('env','USER') }}"
target_home: "/home/{{ target_user }}"

# SSH (kept as is; you can adjust later if you want)
ssh_restore: false
ssh_source_dir: "files/ssh"
ssh_dest_dir: "{{ target_home }}/.ssh"
ssh_private_key: "id_ed25519"
ssh_public_key: "id_ed25519.pub"
ssh_authorized_keys_file: "authorized_keys"
